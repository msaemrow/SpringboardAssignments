{"ast":null,"code":"var _jsxFileName = \"/home/matt/springboard-repo/react-cards-pokemon/src/PlayingCardList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxios from './hooks/useAxios';\nimport { formatPlayingCardData } from \"./formatting\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayingCardList() {\n  _s();\n  const [cards, addCard, clearCards] = useAxios('https://deckofcardsapi.com/api/deck/new/draw/', formatPlayingCardData);\n  const handleAddCard = async () => {\n    await addCard('');\n  };\n  const handleClearCards = () => {\n    clearCards();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PlayingCardList\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pick a card, any card!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCard,\n        children: \"Add a playing card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearCards,\n        children: \"Clear all playing cards!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList-card-area\",\n      children: cards.map(cardData => /*#__PURE__*/_jsxDEV(PlayingCard, {\n        front: cardData.image\n      }, cardData.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayingCardList, \"xgxw6ica9M3KL0xHzHBy3Wxvb+M=\", false, function () {\n  return [useAxios];\n});\n_c = PlayingCardList;\nexport default PlayingCardList;\nvar _c;\n$RefreshReg$(_c, \"PlayingCardList\");","map":{"version":3,"names":["React","PlayingCard","useAxios","formatPlayingCardData","jsxDEV","_jsxDEV","PlayingCardList","_s","cards","addCard","clearCards","handleAddCard","handleClearCards","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","cardData","front","image","id","_c","$RefreshReg$"],"sources":["/home/matt/springboard-repo/react-cards-pokemon/src/PlayingCardList.js"],"sourcesContent":["import React from \"react\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxios from './hooks/useAxios'\nimport { formatPlayingCardData } from \"./formatting\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction PlayingCardList() {\n  const [cards, addCard, clearCards] = useAxios('https://deckofcardsapi.com/api/deck/new/draw/', formatPlayingCardData)\n  \n  const handleAddCard = async() => {\n    await addCard('');\n  }\n\n  const handleClearCards = () => {\n    clearCards();\n  }\n\n  return (\n    <div className=\"PlayingCardList\">\n      <h3>Pick a card, any card!</h3>\n      <div>\n        <button onClick={handleAddCard}>Add a playing card!</button>\n        <button onClick={handleClearCards}>Clear all playing cards!</button>\n      </div>\n      <div className=\"PlayingCardList-card-area\">\n        {cards.map(cardData => (\n          <PlayingCard key={cardData.id} front={cardData.image} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PlayingCardList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,qBAAqB,QAAQ,cAAc;;AAEpD;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,+CAA+C,EAAEC,qBAAqB,CAAC;EAErH,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAW;IAC/B,MAAMF,OAAO,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BT,OAAA;MAAAS,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/Bb,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAQc,OAAO,EAAER,aAAc;QAAAG,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5Db,OAAA;QAAQc,OAAO,EAAEP,gBAAiB;QAAAE,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC,2BAA2B;MAAAC,QAAA,EACvCN,KAAK,CAACY,GAAG,CAACC,QAAQ,iBACjBhB,OAAA,CAACJ,WAAW;QAAmBqB,KAAK,EAAED,QAAQ,CAACE;MAAM,GAAnCF,QAAQ,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0B,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAzBQD,eAAe;EAAA,QACeJ,QAAQ;AAAA;AAAAuB,EAAA,GADtCnB,eAAe;AA2BxB,eAAeA,eAAe;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}