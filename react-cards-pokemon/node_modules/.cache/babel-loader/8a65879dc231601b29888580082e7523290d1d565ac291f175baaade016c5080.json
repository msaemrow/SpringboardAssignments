{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nconst useAxios = url => {\n  _s();\n  const [responses, setResponses] = useState([]);\n  const addResponseData = async () => {\n    try {\n      const res = await axios.get(url);\n      setResponses(data => [...data, {\n        ...res.data,\n        id: uuid()\n      }]);\n    } catch (error) {\n      console.error(\"Error fectching data\", error);\n    }\n  };\n  return [responses, addResponseData];\n};\n_s(useAxios, \"vMQZFOHJbpBfbx+C6jBQHAS5iO4=\");\nexport default useAxios;","map":{"version":3,"names":["axios","useState","v4","uuid","useAxios","url","_s","responses","setResponses","addResponseData","res","get","data","id","error","console"],"sources":["/home/matt/springboard-repo/react-cards-pokemon/src/hooks/useAxios.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\"\n\nconst useAxios = (url) => {\n    const [responses, setResponses] = useState([]);\n\n    const addResponseData = async() => {\n        try{\n            const res = await axios.get(url);\n            setResponses(data => [...data, {...res.data, id: uuid()}]);\n        } catch(error){\n            console.error(\"Error fectching data\", error);\n        }\n    };\n    return [responses, addResponseData]\n}\n\nexport default useAxios;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AAEjC,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAW;IAC/B,IAAG;MACC,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACN,GAAG,CAAC;MAChCG,YAAY,CAACI,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAC,GAAGF,GAAG,CAACE,IAAI;QAAEC,EAAE,EAAEV,IAAI,CAAC;MAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAMW,KAAK,EAAC;MACVC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EACD,OAAO,CAACP,SAAS,EAAEE,eAAe,CAAC;AACvC,CAAC;AAAAH,EAAA,CAZKF,QAAQ;AAcd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}